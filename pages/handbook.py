import streamlit as st

with st.expander("class1"):
    st.write(
        """
這邊幫你用小六生也能懂的方式，整理今天學到的 Python 指令內容，每一項都用簡單白話講解，加上一些小提醒：

---

### 📝 一、註解（說明文字，不會執行）

* `#`：單行註解（只註解一行）
* `\""" 文字 \"""`：多行註解（可以寫好幾行）
* 用來寫說明給自己看，電腦不會執行。

---

### 🔢 二、基本資料型態（電腦可以記的資料種類）

| 資料類型      | 範例              | 說明          |
| --------- | --------------- | ----------- |
| 整數（int）   | `1`, `0`, `-5`  | 沒有小數點的數字    |
| 小數（float） | `1.1`, `3.14`   | 有小數點的數字     |
| 字串（str）   | `"apple"`       | 用引號包起來的文字   |
| 布林值（bool） | `True`, `False` | 表示對或錯（是或不是） |

---

### 📦 三、變數（存資料的小盒子）

```python
a = 10
a = "apple"
```

* `=` 是「把右邊的東西放進左邊的盒子」
* 可以改變裡面的內容

---

### ➕ 四、運算（算數）

| 運算符號 | 功能   | 範例           |
| ---- | ---- | ------------ |
| `+`  | 加法   | `1 + 2`      |
| `-`  | 減法   | `5 - 3`      |
| `*`  | 乘法   | `2 * 3`      |
| `/`  | 除法   | `6 / 2`      |
| `%`  | 餘數   | `5 % 2` → 1  |
| `**` | 次方   | `2 ** 3` → 8 |
| `//` | 整數除法 | `5 // 2` → 2 |

⏳ 運算順序（就像數學一樣）：

1. 括號 `()`
2. 次方 `**`
3. 乘除 `* / // %`
4. 加減 `+ -`

---

### 🧵 五、字串操作（玩文字）

```python
print("apple" + " pen")  # 字串相加 → "apple pen"
print("hi " * 3)         # 重複字串 → "hi hi hi"
print(len("apple"))      # 算字串長度 → 5
```

---

### 🔍 六、查看資料型態 & 轉換

* `type()`：看資料是什麼型態
* `int()`：變成整數
* `float()`：變成小數
* `str()`：變成字串
* `bool()`：變成布林值（0 是 False，其他都是 True）

🧨 小提醒：不能亂轉！像 `"hello"` 不能變成數字，會錯誤！

---

### 🎤 七、輸入與輸出

* `input("提示文字")`：讓使用者輸入資料
* 輸入的資料 *一定* 是字串，要自己轉型態

範例：

```python
a = input("請輸入：")  # 這是一段文字
print(a)  # 印出剛才輸入的內容
```

---

### 🧙‍♂️ 八、f-string 格式化（像魔法一樣把變數放進字串）

```python
name = "apple"
age = 18
print(f"Hello, my name is {name}, I am {age} years old")
```

💡 只要在字串前面加 `f`，就可以用 `{}` 把變數放進字串裡。

---

如果要給小六的整理版本當筆記，我也可以幫你做成圖表或表格檔案哦，要嗎？

"""
    )


with st.expander("class2"):
    st.write(
        """
這邊幫你把今天學到的 Python 指令內容，用**小六也能懂的方式**整理好囉，讓你一看就懂，每一段都有【白話說明】和【小提醒】👇

---

## 📥 `input()` + 計算練習：讓使用者輸入，再做計算

```python
a = int(input("請輸入數字:"))
print(a * a * 3.14)
```

🧠【白話說明】
讓使用者輸入數字 → 把字串轉成整數 → 再幫忙算圓面積！

💡【小提醒】
`input()` 得到的內容是「文字」，要用 `int()` 變成數字才能算喔！

---

## 🧙‍♂️ f-string：讓句子自動放入變數內容

```python
name = "apple"
age = 18
print(f"hello, my name is {name}, I am {age} years old")
```

🧠【白話說明】
只要在字串前加 `f`，再用 `{}` 把變數名字包起來，電腦就會幫你把內容放進句子裡。

---

## 🧮 比較運算子：比大小、比一不一樣

| 運算子  | 說明    | 範例       | 結果    |
| ---- | ----- | -------- | ----- |
| `==` | 相等    | `1 == 1` | True  |
| `!=` | 不相等   | `1 != 1` | False |
| `>`  | 大於    | `1 > 1`  | False |
| `<`  | 小於    | `1 < 1`  | False |
| `>=` | 大於或等於 | `1 >= 1` | True  |

🧠【白話說明】
這些運算會回傳 True（對）或 False（錯），就像在問電腦：對嗎？

---

## 🔗 邏輯運算子：組合多個條件判斷

### `and`：兩個都要對才算對

```python
print(True and True)     # True
print(True and False)    # False
```

### `or`：只要有一個對就算對

```python
print(False or True)     # True
print(False or False)    # False
```

### `not`：顛倒對錯

```python
print(not True)          # False
print(not False)         # True
```

🧠【白話說明】
這些可以讓條件更靈活，像在玩「對的 + 對的」或「對的反過來」。

---

## 🧮 運算順序（超重要！）

運算會照順序來，優先順序如下：

1. `()` 括號最優先
2. `**` 次方
3. `* / // %` 乘除
4. `+ -` 加減
5. `== != > < >= <=` 比大小
6. `not` 顛倒真假
7. `and`
8. `or`

🧠【白話說明】
像數學一樣，有順序，先算括號，再算乘除，再來加減，最後才是真假判斷。

---

## 🔐 if 密碼判斷：讓程式根據不同情況決定要說什麼

```python
password = input("請輸入密碼：")
if password == "1234":
    print("welcome Jeffery")
elif password == "5678":
    print("歡迎 Jeffery")
elif password == "0000":
    print("歡迎 Tom")
else:
    print("密碼錯誤")
```

🧠【白話說明】
程式會一個一個檢查密碼，如果對了，就執行對應的動作。
如果都不對，才會跑到 `else`。

✅ `if`：如果...
✅ `elif`：不然如果...
✅ `else`：其他的情況

💡【小提醒】

* 用 `elif`，如果前面已經對了，後面的就不會再檢查 → **節省時間！**
* 如果用很多個 `if`，每一個都會執行 → **比較慢**

---

需要我幫你出幾題小測驗、做成筆記表格、或轉成圖片筆記嗎？📒📷 都可以！

"""
    )

with st.expander("class3"):
    st.write(
        """
當然可以！這邊是針對你提供的 Python 教學內容，幫你**用小六生都能懂的方式**整理，分成幾大主題，並搭配【白話說明】+【小提醒】，讓初學者看得懂、學得快 👇

---

## 🧮 1. `st.number_input()` 數字輸入盒

```python
number = st.number_input("請輸入一個數字", step=1, min_value=0, max_value=100)
```

🧠【白話說明】
這個會在網頁上顯示一個數字輸入框，讓你可以打數字進去。
`step=1` 是一次加一、減一，保證是整數！

💡【小提醒】
最大只能輸入 100，最小是 0。

---

## 🗣️ 2. `st.markdown()` 顯示文字（還能加格式）

```python
st.markdown(f"你輸入的數字是：{number}")
```

🧠【白話說明】
就像是印出文字，但還可以用 **粗體**、_斜體_、# 標題... 等等。

💡【小提醒】
搭配 `f"..."` 可以把變數塞進去！

---

## 📝 3. `st.title()` 和成績評分

```python
score = st.number_input("請輸入一個score", step=1, min_value=0, max_value=100)
if score >= 90:
    st.markdown("A")
```

🧠【白話說明】
用 `st.title()` 可以顯示大大的標題，讓畫面更漂亮！
下面是簡單的成績判斷機器（A, B, C, D, F）～依照分數顯示成績。

💡【小提醒】
`elif` 是「不然如果」，`else` 是「其他都不是的話」。

---

## 🔘 4. `st.button()` 和互動效果

```python
if st.button("點我", key="ballons"):
    st.balloons()
```

🧠【白話說明】
網頁上出現一個「按鈕」，點下去就會噴氣球或下雪！

💡【小提醒】
每個按鈕都要有不同的 `key`，不然 Streamlit 會分不清楚。

---

## 🔁 5. `for` 迴圈：重複做很多次的事

```python
for i in range(5):
    print(i)
```

🧠【白話說明】
讓電腦幫你做「一樣的事」好幾次。
像上面就是從 0 數到 4，總共印 5 次！

💡【小提醒】
`range(x)` 最後一個數字「不包含」x！

---

## 🔺 6. 數字金字塔（迴圈練習）

```python
for i in range(1, number + 1):
    st.write(str(i) * i)
```

🧠【白話說明】
如果輸入 4，就會印出這樣的金字塔：

```
1
22
333
4444
```

💡【小提醒】
要用 `str(i)` 把數字變成文字，才可以乘上去！

---

## 📚 7. list 列表：裝很多東西的箱子

```python
name = ["tom", "jerry", "mike"]
print(name[0])  # 印出 tom
```

🧠【白話說明】
list 就是像一排格子，每個格子可以裝東西，用編號（從 0 開始）取出內容。

💡【小提醒】

- `name[0]` 是第一個
- `name[1:4]` 是從第 2 個到第 4 個（不含第 5 個）

---

## 🔍 8. list 的操作方式總整理

| 操作                   | 說明                 |
| ---------------------- | -------------------- |
| `append(x)`            | 加東西到最後面       |
| `remove(x)`            | 移除第一個出現的 x   |
| `pop(index)`           | 移除指定位置的元素   |
| `copy()`               | 複製 list，不會連動  |
| `len(list)`            | 看 list 裡有幾個東西 |
| `list[start:end:step]` | 用步驟切出你要的部分 |

---

## 🧠 9. call by value & reference（變數的影響）

```python
a = [1, 2, 3]
b = a
b[0] = 9
print(a)  # [9, 2, 3]
```

🧠【白話說明】
有時候兩個變數會「連動」，改了 b 也會影響到 a。
如果用 `.copy()`，他們就會變成「各過各的生活」。

---

## 👩‍🏫 10. 用 `for` 一個一個取出 list 的東西

```python
L = [1, 2, 3]
for i in L:
    print(i)
```

🧠【白話說明】
這就像是說：「你幫我一個一個唸出來」～

---

## 🧾 11. 實戰練習：印出某人的平均分數

```python
midterm = [80, 95, 78, 60, 55]
final = [64, 73, 52, 34, 95]
avg = (midterm[1] + final[1]) / 2
print(avg)  # 印出第2個人的平均分
```

---

## 🎉 12. 額外加碼：自動編號名單

```python
name = ["Amy", "Mandy", "Peter"]
index = 1
for i in name:
    print(f"{index}號是{i}")
    index += 1
```

🧠【白話說明】
自動在名字前面加上 1 號、2 號、3 號，就像點名一樣！

---

需要我幫你把這些做成：

- ✅ 文字筆記（可複製）
- 📄 PDF 教學講義
- 📷 視覺化圖片筆記
- 📋 小測驗題目

都可以幫你生出來！需要哪種呢？

"""
    )
